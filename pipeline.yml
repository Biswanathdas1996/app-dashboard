trigger:
  branches:
    include:
      - none

resources:
  repositories:
    - repository: app-dashboard
      type: git
      name: BPMNgenai/app-dashboard
      ref: main

variables:
  - group: camp-acr-variables
  - name: VER
    value: $(Build.BuildId)

stages:
  - stage:
      displayName: Build
      pool: camp-dev
      jobs:
        - job: Build
          steps:
            - checkout: self
              displayName: "Checkout Code from Repo"

            - task: Bash@3
              displayName: Build Docker Image
              inputs:
                targetType: "inline"
                script: |
                  echo "Building the image"
                  docker login acrcampdev01.azurecr.io -u $(acrforuser) -p $(acrforpassword)
                  docker build -t acrcampdev01.azurecr.io/dev/app-dashboard:$(VER) .
                  docker push acrcampdev01.azurecr.io/dev/app-dashboard:$(VER)
                  docker images

            - task: Bash@3
              displayName: Delete Docker Image from Agent
              inputs:
                targetType: "inline"
                script: |
                  echo "Cleaning up Docker images"
                  docker system prune -af
              condition: always()

  - stage:
      displayName: Deploy
      pool: camp-dev
      jobs:
        - job: Deploy
          steps:
            - checkout: self

            - task: Bash@3
              displayName: Update image tag in deployment.yaml
              inputs:
                targetType: "inline"
                script: |
                  echo "Injecting version into deployment manifest"
                  sed -i "s|#_#IMAGE_TAG#_#|$(VER)|g" deployment.yaml
                  cat deployment.yaml

            - task: Kubernetes@1
              displayName: Apply Deployment to AKS (camp-dev)
              inputs:
                connectionType: "Kubernetes Service Connection"
                kubernetesServiceEndpoint: "camp-dev"
                namespace: "app-dashboard-dev"
                command: apply
                useConfigurationFile: true
                configuration: "deployment.yaml"
