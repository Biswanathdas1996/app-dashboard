trigger:
  branches:
    include:
      - main
      - develop

resources:
  repositories:
    - repository: app-dashboard
      type: git
      name: BPMNgenai/app-dashboard
      ref: main

variables:
  - group: camp-acr-variables
  - name: VER
    value: $(Build.BuildId)
  - name: NODE_VERSION
    value: "20"
  - name: IMAGE_NAME
    value: "acrcampdev01.azurecr.io/dev/app-dashboard"

stages:
  - stage: Build
    displayName: "Build and Push Docker Image"
    pool: camp-dev
    jobs:
      - job: Build
        displayName: "Build Node.js Application"
        steps:
          - checkout: self
            displayName: "Checkout Source Code"

          - task: NodeTool@0
            displayName: "Use Node.js $(NODE_VERSION)"
            inputs:
              versionSpec: "$(NODE_VERSION)"

          - task: Npm@1
            displayName: "Install Dependencies"
            inputs:
              command: "ci"
              verbose: false

          - task: Npm@1
            displayName: "Run Type Check"
            inputs:
              command: "custom"
              customCommand: "run check"

          - task: Npm@1
            displayName: "Build Application"
            inputs:
              command: "custom"
              customCommand: "run build"

          - task: Docker@2
            displayName: "Build Docker Image"
            inputs:
              containerRegistry: "acrcampdev01"
              repository: "dev/app-dashboard"
              command: "build"
              tags: |
                $(VER)
                latest

          - task: Docker@2
            displayName: "Push Docker Image"
            inputs:
              containerRegistry: "acrcampdev01"
              repository: "dev/app-dashboard"
              command: "push"
              tags: |
                $(VER)
                latest

          - task: Bash@3
            displayName: "Docker System Cleanup"
            inputs:
              targetType: "inline"
              script: |
                echo "Cleaning up Docker images and system"
                docker system prune -af --volumes
            condition: always()

  - stage: Deploy
    displayName: "Deploy to Kubernetes"
    pool: camp-dev
    dependsOn: Build
    condition: succeeded()
    jobs:
      - job: Deploy
        displayName: "Deploy to AKS"
        steps:
          - checkout: self
            displayName: "Checkout Source Code"

          - task: Bash@3
            displayName: "Update Image Tag in Deployment"
            inputs:
              targetType: "inline"
              script: |
                echo "Updating deployment.yaml with image tag: $(VER)"
                sed -i "s|#__#IMAGE_TAG#__#|$(VER)|g" deployment.yaml
                echo "Updated deployment.yaml:"
                cat deployment.yaml

          - task: Kubernetes@1
            displayName: "Apply Deployment to AKS"
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceEndpoint: "camp-dev"
              namespace: "app-dashboard-dev"
              command: apply
              useConfigurationFile: true
              configuration: "deployment.yaml"

          - task: Kubernetes@1
            displayName: "Check Rollout Status"
            inputs:
              connectionType: "Kubernetes Service Connection"
              kubernetesServiceEndpoint: "camp-dev"
              namespace: "app-dashboard-dev"
              command: "custom"
              customCommand: "rollout status deployment/app-dashboard --timeout=300s"
